/*

https://www.facebook.com/careers/life/sample_interview_questions

Question 1: 2D Spiral Array
Find the pattern and complete the function:
int[][] spiral(int n);
where n is the size of the 2D array.
Sample Result
input = 3
123
894
765

input = 4
01 02 03 04
12 13 14 05
11 16 15 06
10 09 08 07

input = 8
1 2 3 4 5 6 7 8
28 29 30 31 32 33 34 9
27 48 49 50 51 52 35 10
26 47 60 61 62 53 36 11
25 46 59 64 63 54 37 12
24 45 58 57 56 55 38 13
23 44 43 42 41 40 39 14
22 21 20 19 18 17 16 15

*/

function spiral(n) {
  

  let spiralArr = new Array(n);
  for (let i = 0; i < spiralArr.length; i++) {
    spiralArr[i] = new Array(n).fill(0);
  }

  let x = 0;
  let y = 0;

  let count = 1;

  let dx = [0, 1, 0, -1];
  let dy = [1, 0, -1, 0];
  let dir = 0;

  // stops when the next value is already filled in. could also iterate to n
  while (spiralArr[x][y] === 0) {
    // fill in value
    spiralArr[x][y] = count;
    count++;

    x += dx[dir];
    y += dy[dir];

    // check if i need to change direction (reached edge or already filled in item) and do so if needed
    if (isInvalid(spiralArr, x, y)) {
      // undo, change dir, redo changes
      x -= dx[dir];
      y -= dy[dir];

      // modulo makes it wrap around if it reaches the end of dirs array
      dir = (dir + 1) % 4;

      x += dx[dir];
      y += dy[dir];
    }
  }

  return spiralArr;
};

function isInvalid(matrix, x, y) {
  return (x < 0 || x >= matrix.length || y < 0 || y >= matrix.length || matrix[x][y] !== 0);
};

spiral(2);
spiral(3);
spiral(4);
spiral(8);
