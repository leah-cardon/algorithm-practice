// Meta interview study practice

/* Rotational Cipher:
One simple way to encrypt a string is to "rotate" every alphanumeric character by a certain amount. Rotating a character means replacing it with another character that is a certain number of steps away in normal alphabetic or numerical order.
For example, if the string "Zebra-493?" is rotated 3 places, the resulting string is "Cheud-726?". Every alphabetic character is replaced with the character 3 letters higher (wrapping around from Z to A), and every numeric character replaced with the character 3 digits higher (wrapping around from 9 to 0). Note that the non-alphanumeric characters remain unchanged.
Given a string and a rotation factor, return an encrypted string.
Signature
string rotationalCipher(string input, int rotationFactor)
Input
1 <= |input| <= 1,000,000
0 <= rotationFactor <= 1,000,000
Output
Return the result of rotating input a number of times equal to rotationFactor.
Example 1
input = Zebra-493?
rotationFactor = 3
output = Cheud-726?
Example 2
input = abcdefghijklmNOPQRSTUVWXYZ0123456789
rotationFactor = 39
output = nopqrstuvwxyzABCDEFGHIJKLM9012345678
*/

function rotateChar(char, factor) {
  const letters = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'];
  const numbers = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'];
  let isUpperCase = false;
  let rotateFactor = factor;
  let rotatedChar = char;
  
  if (letters.includes(char.toLowerCase())) {
      rotateFactor = (letters.indexOf(char.toLowerCase()) + factor) % letters.length;

    if (char.toLowerCase() !== char) {
      isUpperCase = true;
    }
  
    rotatedChar = letters[rotateFactor];
    
    if (isUpperCase) {
      rotatedChar = rotatedChar.toUpperCase()
    }
  } else if (numbers.includes(char)) {
    rotateFactor = (numbers.indexOf(char) + factor) % numbers.length;
    console.log(rotateFactor);
    
    rotatedChar = numbers[rotateFactor];
  }
  
  return rotatedChar;
};


function rotationalCipher(input, rotationFactor) {

  let encryptedStr = '';
  
  for (let i = 0; i < input.length; i++) {
    encryptedStr += rotateChar(input[i], rotationFactor);            
  }
  
  return encryptedStr;
};
